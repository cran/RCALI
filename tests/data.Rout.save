
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # source("moninit")
>  library("RCALI")
> 
> 
> # Cubature: Example of the user guide:
> param=list(input=2,verbose=FALSE,output=1,poly=c(66,66),
+    method="cub", maxpts= rep(1.0e+8,2),
+  reler= c(1.0e-4, 1.0e-3),
+    dz=c(0,21), dp=c(100,0),  tz=c(0,1))
> 
> start.run <- Sys.time()
> califlopp(file="data",
+ c(fpollen,fseed), param=param)

Number of polygons: 100
-------------------

Parameters:
-----------
verbose: 0
output: 1
scale: 10
maximal dispersion distances for each function: 0 21
minimal dispersion distances for each function: 100 0
(the dispersion is calculated between centroids,
 for distances beyond these values)
method:cubature
function 1: relative precision = 0.0001, absolute precision = 0.001
            maximal number of evaluations points fixed to 100000000 
function 2: relative precision = 0.001, absolute precision = 0.001
            maximal number of evaluations points fixed to 100000000 
mode of triangulation: 0 1

Polygons  66 (66), 66 (66)
-------------------

Integrated flow for function 1:
 mean: 8.47219 mean/area1: 0.529512 mean/area2: 0.529512
 absolute error: 0.000999598 relative error: 0.000117986
 confidence interval: [8.47119, 8.47319]
 nb. evaluations: 576682

Integrated flow for function 2:
 mean: 12.3758 mean/area1: 0.773489 mean/area2: 0.773489
 absolute error: 0.00198936 relative error: 0.000160746
 confidence interval: [12.3738, 12.3778]
 nb. evaluations: 1480

area1: 16 area2: 16 
> end.run <- Sys.time()
> duration <- end.run - start.run
> # print(duration)
> 
> # Grid: Example of the user guide:(too long)
> # param=list(input=1, delim=" ", poly=c(66,66),
> #   dz=c(0,21), dp=c(100,0),  tz=c(0,1), method="grid",
> #   step=c(0.25, 0.25), nr=20)
> # start.run <- Sys.time()
> # califlopp(file="data",c(1,2), param=param)
> # end.run <- Sys.time()
> # duration <- end.run - start.run
> # print(duration)
> 
> 
> # Grid: Example of the Example chapter of the manual: (too long)
> #param=list(input=1, delim=" ",  method="grid",
> #  poly=list(c(1,1),c(14,14),c(11,12),c(56,57),c(4,4)), nr=5,
> #  step=c(1,1))
> 
> #start.run <- Sys.time()
> # califlopp(file="data", dispf=1,param=param)
> #end.run <- Sys.time()
> #duration <- end.run - start.run
> # print(duration)
> 
> 
> # Idem with R dispersion function: (too long)
> # param=list(input=1, delim=" ",  method="grid",
> #   poly=list(c(1,1),c(14,14),c(11,12),c(56,57),c(4,4)), nr=5,
> #   step=c(1,1), dz=0, dp=100, tz=0)
> # start.run <- Sys.time()
> # califlopp(file="data", dispf=fpollen,param=param)
> # end.run <- Sys.time()
> # duration <- end.run - start.run
> # print(duration)
> 
> 
> proc.time()
   user  system elapsed 
  2.207   0.048   2.261 
